<UserControl x:Class="MpFree4k.Controls.AlbumDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converter="clr-namespace:MpFree4k.Converter"
             xmlns:enums="clr-namespace:MpFree4k.Enums;assembly=MpFree4k"
             xmlns:local="clr-namespace:MpFree4k.Controls"
             mc:Ignorable="d" 
             x:Name="_This"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MpFree4k;component/Styles/FontSizes/FontSizesNormal.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BitmapImage x:Key="icon_gridsplit_horiz">pack://application:,,,/MpFree4k;component/Images/gridsplitter_horizontal.png</BitmapImage>
            <BitmapImage x:Key="icon_gridsplit_vert">pack://application:,,,/MpFree4k;component/Images/gridsplitter_vertical.png</BitmapImage>
            <BitmapImage x:Key="icon_triangle">pack://application:,,,/MpFree4k;component/Images/arrow_drop_down_black_32x.png</BitmapImage>

            <converter:AddConverter x:Key="convAdd"/>
            <converter:BoolToOpacityConverter x:Key="bool2opacconv"/>
            <converter:StringToVisibilityConverter x:Key="strToVisConv"/>

            <DataTemplate x:Key="FullComboHeader">
                <Grid Background="Transparent" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="100*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="1" Padding="0" VerticalAlignment="Stretch" 
                           Content="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=Tag}" 
                           FontSize="{DynamicResource FontSizeBig}"
                           Foreground="{DynamicResource MenuDisabledTextBrush}" />
                    <Image Grid.Column="0" Source="{StaticResource icon_triangle}" Width="13" Height="13" Margin="0,0,9,0" Opacity="0.5"/>
                </Grid>
            </DataTemplate>

            <ControlTemplate x:Key="CustomToggleButton" TargetType="ToggleButton">
                <Grid>
                    <Border Name="Border" />
                    <Border Name="SmallBorder" />
                    <Path Name="Arrow" />
                </Grid>
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border>
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ComboBox}" x:Key="comboStyle">
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrush}" Color="White"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" />
                </Style.Resources>

                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid
                                Background="{DynamicResource FirstItemBackground}" SnapsToDevicePixels="true"  x:Name="MainGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup AllowsTransparency="true" 
                                    IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                    Placement="Bottom" 
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                                    Margin="1"
                                    Opacity="0.4"
                                    x:Name="PART_Popup" 
                                    Grid.ColumnSpan="2">
                                    <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding Path=ActualWidth, ElementName=MainGrid}"
                                        x:Name="Shdw">
                                        <Border x:Name="DropDownBorder"
                                            Background="Transparent"
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                            BorderThickness="0.5">
                                            <ScrollViewer CanContentScroll="true">
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <ToggleButton Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="0"
                                    Grid.ColumnSpan="2" 
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter IsHitTestVisible="false" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                    Content="{TemplateBinding Tag}"
                                    ContentTemplate="{StaticResource FullComboHeader}" 
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="DropDownBorder" Value="White"/>
                                    <Setter Property="Background" Value="White"/>
                                    <Setter Property="Background" TargetName="MainGrid" Value="White"/>
                                </Trigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                    <!--<Setter Property="" TargetName="Shdw" Value="#71000000"/>-->
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" Value="Black"/>
                                </Trigger>

                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>

                </Style.Triggers>
            </Style>

            <ContextMenu x:Key="LVIContextMenu">
                <MenuItem x:Name="mnuCtxPlay" Header="play" Click="mnuCtxPlay_Click"/>
                <MenuItem x:Name="mnuCtxInsert" Header="insert" Click="mnuCtxInsert_Click"/>
                <MenuItem x:Name="mnuCtxAdd" Header="add" Click="mnuCtxAdd_Click"/>
                <MenuItem x:Name="menuCtxEdit" Header="edit" Click="menuCtxEdit_Click"/>
            </ContextMenu>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{DynamicResource FirstItemBackground}" x:Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="100*"/>
        </Grid.RowDefinitions>

        <ComboBox FontSize="{DynamicResource FontSizeBigger}" Foreground="{DynamicResource MenuTextBrush}" Margin="0,0,0,0"
                      Tag="All Albums"
                      HorizontalAlignment="Left"
                      BorderBrush="{DynamicResource MenuBrush}" BorderThickness="0"
                      MaxDropDownHeight="900"
                  Style="{StaticResource comboStyle}"
                      Background="Transparent"
                      SelectedIndex="0">


            <ComboBoxItem>
                <Grid Background="{DynamicResource PlaylistBackground}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Vertical" Grid.Row="0" Margin="0,0,0,16">
                        <StackPanel.Resources>
                            <Style TargetType="Label">
                                <Setter Property="Foreground" Value="{DynamicResource MenuHighlightBrush}"/>
                            </Style>
                        </StackPanel.Resources>

                        <Label FontSize="{DynamicResource FontSizeNormal}" Foreground="{DynamicResource PlayerInactiveBrush}" Content="Order By" Margin="6,0,0,0"/>

                        <Label Content="Album" Cursor="Hand" FontSize="{DynamicResource FontSizeNormal}" Margin="20,0,0,0" Tag="{x:Static enums:AlbumDetailsOrderType.Album}" MouseDown="Label_MouseDown">
                            <Label.Style>
                                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_This, Path=AlbumDetailsOrderType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:AlbumDetailsOrderType.Album}">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                        <Label Content="Artist" Cursor="Hand" FontSize="{DynamicResource FontSizeNormal}" Margin="20,0,0,0" Tag="{x:Static enums:AlbumDetailsOrderType.Artist}" MouseDown="Label_MouseDown">
                            <Label.Style>
                                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_This, Path=AlbumDetailsOrderType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:AlbumDetailsOrderType.Artist}">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                        <Label Content="Year" Cursor="Hand" FontSize="{DynamicResource FontSizeNormal}" Margin="20,0,0,0" Tag="{x:Static enums:AlbumDetailsOrderType.Year}" MouseDown="Label_MouseDown">
                            <Label.Style>
                                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_This, Path=AlbumDetailsOrderType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:AlbumDetailsOrderType.Year}">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                        <Label Content="All" Cursor="Hand" FontSize="{DynamicResource FontSizeNormal}" Margin="20,0,0,0" Tag="{x:Static enums:AlbumDetailsOrderType.All}" MouseDown="Label_MouseDown">
                            <Label.Style>
                                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=_This, Path=AlbumDetailsOrderType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static enums:AlbumDetailsOrderType.All}">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>

                    </StackPanel>
                </Grid>
            </ComboBoxItem>
        </ComboBox>

        <ScrollViewer HorizontalScrollBarVisibility="Hidden" 
                      ScrollChanged="ScrollViewer_ScrollChanged"
                      VerticalScrollBarVisibility="Auto"  Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                      PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">

            <ItemsControl x:Name="ListGroups"
            VirtualizingStackPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Standard"
                      VirtualizingPanel.ScrollUnit="Item"
            ScrollViewer.CanContentScroll="True"
            Margin="2,5,0,5"
            ItemsSource="{Binding AlbumGroups, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}, Path=ActualWidth, Converter={StaticResource convAdd}, ConverterParameter=-24}"
								Orientation="Vertical"
                                />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Label FontSize="{DynamicResource FontSizeBigger}" Content="{Binding GroupName}" Visibility="{Binding GroupName, Converter={StaticResource strToVisConv}}"
                               Foreground="{DynamicResource MenuTextBrush}"/>

                            <ListView x:Name="ListAlbums" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Grid.Row="2"
                                    Margin="2,5,0,5"
                                    SelectionMode="Single"
                                    Background="{DynamicResource FirstItemBackground}"
                                    PresentationTraceSources.TraceLevel="High"
                                    ItemsSource="{Binding Albums, UpdateSourceTrigger=PropertyChanged}"
                                    BorderThickness="0"
                                    PreviewMouseUp="ListAlbums_PreviewMouseUp"
                                    PreviewMouseDown="ListAlbums_PreviewMouseDown"
                                    PreviewMouseMove="ListAlbums_PreviewMouseMove"
                                    VirtualizingStackPanel.IsVirtualizing="True"
                                    VirtualizingStackPanel.VirtualizationMode="Standard"
                                    Loaded="ListAlbums_Loaded">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <!--<EventSetter Event="PreviewMouseDown" Handler="ListViewItem_MouseDown"/>-->
                                        <Setter Property="ContextMenu" Value="{StaticResource LVIContextMenu}"/>
                                        <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}"/>
                                        <Setter Property="MaxWidth" Value="{Binding ElementName=_This, Path=ListWidth}"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Margin" Value="0,0,1,1"/>
                                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsVisible" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="2" Width="240">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="120"/>
                                                <ColumnDefinition Width="100*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="100*"/>
                                            </Grid.RowDefinitions>


                                            <Grid VerticalAlignment="Center" HorizontalAlignment="Left"
                                                Width="110" Height="110" Opacity="0.8"
                                                Margin="-2,0,0,0"
                                                Grid.RowSpan="2">
                                                
                                                <Grid.OpacityMask>
                                                    <VisualBrush Visual="{Binding ElementName=ImgBorder}" />
                                                </Grid.OpacityMask>
                                                
                                                <Border x:Name="ImgBorder"
                                                    Margin="0,0,0,0"
                                                    CornerRadius="5" Background="{DynamicResource ImageBackgroundBrush}" />
                                                <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Source="{Binding AlbumImage}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    Opacity="{Binding HasAlbumImage, Converter={StaticResource bool2opacconv}}"
                                                    Width="110" Height="110"/>

                                            </Grid>


                                            <Grid Grid.Column="1" Grid.Row="0" VerticalAlignment="Top">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="100*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="100*"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Text="{Binding Album}" 
                                                    ToolTip="{Binding Album}" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"  FontSize="{DynamicResource FontSizeNormal}" Foreground="{DynamicResource ListItemForeground}" 
                                                    FontFamily="Verdana" VerticalAlignment="Bottom"
                                                    HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis"/>

                                                <TextBlock Text="Artist:" Grid.Column="0" Grid.Row="1" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource MenuTextBrush}" Margin="0,0,4,0"/>
                                                <TextBlock Text="{Binding Artist}" Grid.Row="1" Grid.Column="1" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource ListItemForeground}" />

                                                <TextBlock Text="Genre:" Grid.Column="0" Grid.Row="2" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource MenuTextBrush}" Margin="0,0,4,0"/>
                                                <TextBlock Text="{Binding Genre}" Grid.Row="2" Grid.Column="1" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource ListItemForeground}" />

                                                <TextBlock Text="Year:" Grid.Column="0" Grid.Row="3" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource MenuTextBrush}" Margin="0,0,4,0"/>
                                                <TextBlock Text="{Binding Year}" Grid.Row="3" Grid.Column="1" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource ListItemForeground}" />

                                                <TextBlock Text="Tracks:" Grid.Column="0" Grid.Row="4" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource MenuTextBrush}" Margin="0,0,4,0"/>
                                                <TextBlock Text="{Binding TrackCount}" Grid.Row="4" Grid.Column="1" FontSize="{DynamicResource FontSizeSmaller}" HorizontalAlignment="Left" Foreground="{DynamicResource ListItemForeground}" />

                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=ActualWidth, Converter={StaticResource convAdd}, ConverterParameter=-24}" 
                                                    Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                            </ListView>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        </ScrollViewer>



        <Grid x:Name="gridCharTip" Visibility="Hidden" Grid.Row="2" HorizontalAlignment="Right" Width="Auto" MinWidth="36" Height="38" VerticalAlignment="Top" Margin="3,1,19,3">
            <Border BorderBrush="Gray" Background="Gainsboro" Opacity="0.44" BorderThickness="1" CornerRadius="1.5">
                <Label Content="{Binding ElementName=_This, Path=CurrentCharacter}" Foreground="Black" FontSize="{DynamicResource FontSizeBiggest}"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1"/>
            </Border>
        </Grid>


    </Grid>
</UserControl>
