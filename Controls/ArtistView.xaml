<UserControl x:Class="MpFree4k.Controls.ArtistView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MpFree4k.Controls"
             xmlns:enums="clr-namespace:MpFree4k.Enums"
             xmlns:converter="clr-namespace:MpFree4k.Converter"
             mc:Ignorable="d" 
             x:Name="_This"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/MpFree4k;component/Styles/FontSizes/FontSizesNormal.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MpFree4k;component/Styles/Skins/White.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <converter:AddConverter x:Key="convAdd"/>
            <converter:GetSizeConverter x:Key="convGetSize"/>
            <converter:NoImageToDefault x:Key="noimgtodefconv"/>
            <converter:BoolToOpacityConverter x:Key="bool2opacconv"/>
            
            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Border BorderThickness="0,0,0,1" BorderBrush="#D0D0D0" Background="Transparent">
                                <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="30,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Left" Foreground="Gray"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="Padding" Value="28"/>
            </Style>

            <Style TargetType="{x:Type ListViewItem}">
                <Setter Property="OverridesDefaultStyle" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border BorderBrush="Transparent"  BorderThickness="0" Name="Bd">
                                <GridViewRowPresenter  
 	                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate x:Key="ItemList">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="36"/>
                        <ColumnDefinition Width="100*"/>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="8*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="30"/>
                    </Grid.RowDefinitions>

                    <Grid VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Width="32" Height="32" Opacity="0.8">
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=ImgBorder}" />
                        </Grid.OpacityMask>
                        <Border x:Name="ImgBorder" CornerRadius="3" Background="{DynamicResource ImageBackgroundBrush}" />
                        <Image Source="{Binding FirstAlbum, Converter={StaticResource noimgtodefconv}}"
                               Opacity="{Binding HasAlbumImage, Converter={StaticResource bool2opacconv}}"/>
                    </Grid>

                    <TextBlock Text="{Binding Artists}" Grid.Column="1" FontSize="{DynamicResource FontSizeNormal}" Foreground="{DynamicResource ListItemForeground}" FontFamily="Verdana" VerticalAlignment="Center"
                           HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis"/>
                    <TextBlock Text="{Binding AlbumCount}" Grid.Column="2" FontSize="{DynamicResource FontSizeSmaller}" Margin="0,0,2,0"/>
                    <TextBlock Text="{Binding TrackCount}" Grid.Column="3" FontSize="{DynamicResource FontSizeSmaller}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="ArtistPlain">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100*"/>
                        <!--<ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="8*"/>-->
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding Artists}" Grid.Column="0" FontSize="{DynamicResource FontSizeNormal}" Foreground="{DynamicResource ListItemForeground}" FontFamily="Verdana" VerticalAlignment="Center"
                           HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" Margin="0,3,0,4"/>
                    <!--<TextBlock Text="{Binding AlbumCount}" Grid.Column="1" FontSize="{DynamicResource FontSizeSmaller}" Margin="0,0,2,0"/>
                    <TextBlock Text="{Binding TrackCount}" Grid.Column="2" FontSize="{DynamicResource FontSizeSmaller}"/>-->
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="ArtistTile">
                <!--<Border Margin="4" BorderBrush="WhiteSmoke" BorderThickness="1" HorizontalAlignment="Stretch">-->
                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="22"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding Artists}" Grid.Column="1" FontSize="{DynamicResource FontSizeBigger}" Foreground="{DynamicResource ListItemForeground}" FontFamily="Verdana"
                                   VerticalAlignment="Center"/>

                    <ListBox ItemsSource="{Binding Albums, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                  Grid.Row="1"
                                  VerticalAlignment="Stretch"
                                  HorizontalAlignment="Stretch"
                             HorizontalContentAlignment="Stretch"
                                  Background="Transparent"
                             SelectionChanged="ListBox_SelectionChanged"
                                  BorderBrush="Transparent" BorderThickness="0"
                             SelectionMode="Extended"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden">

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}"/>
                                <Setter Property="MaxWidth" Value="{Binding ElementName=_This, Path=ListWidth, Converter={StaticResource convAdd}, ConverterParameter=-10}"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="4" BorderBrush="White" BorderThickness="0" HorizontalAlignment="Stretch">
                                    <Grid Margin="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="100*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="100*"/>
                                        </Grid.RowDefinitions>


                                        <Grid VerticalAlignment="Center" HorizontalAlignment="Left"
                                              Margin="2,2,6,2"
                                   Width="80" Height="80" Opacity="0.8"
                                              Grid.RowSpan="2">
                                            <Grid.OpacityMask>
                                                <VisualBrush Visual="{Binding ElementName=ImgBorder}" />
                                            </Grid.OpacityMask>
                                            <Border x:Name="ImgBorder" CornerRadius="3" Background="{DynamicResource ImageBackgroundBrush}" />
                                            <Image Source="{Binding AlbumImage, Converter={StaticResource noimgtodefconv}}"
                                                   Opacity="{Binding HasAlbumImage, Converter={StaticResource bool2opacconv}}"/>
                                        </Grid>
                                        
                                        <TextBlock 
                                            Grid.Row="0" Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            TextTrimming="CharacterEllipsis"
                                            ToolTip="{Binding AlbumLabel}"
                                            Text="{Binding AlbumLabel}" FontSize="{DynamicResource FontSizeBig}" Foreground="{DynamicResource ListItemForeground}" FontFamily="Verdana"/>

                                        <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1">
                                            <TextBlock FontSize="{DynamicResource FontSizeSmaller}" Foreground="{DynamicResource MenuTextBrush}" FontFamily="Verdana"><Run Text="Genre: "/><Run Foreground="{DynamicResource ListItemForeground}" Text="{Binding Genre}"/></TextBlock>
                                            <TextBlock FontSize="{DynamicResource FontSizeSmaller}" Foreground="{DynamicResource MenuTextBrush}" FontFamily="Verdana"><Run Text="Year: "/><Run Foreground="{DynamicResource ListItemForeground}"  Text="{Binding Year}"/></TextBlock>
                                            <TextBlock FontSize="{DynamicResource FontSizeSmaller}" Foreground="{DynamicResource MenuTextBrush}" FontFamily="Verdana"><Run Text="Tracks: "/><Run  Foreground="{DynamicResource ListItemForeground}" Text="{Binding TrackCount}"/></TextBlock>

                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
                <!--</Border>-->
            </DataTemplate>

            <DataTemplate x:Key="SwitchArtistTemplate">
                <ContentControl Content="{Binding }">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate" Value="{StaticResource ItemList}"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=_This, Path=ArtistViewType}" Value="{x:Static enums:ArtistViewType.List}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ItemList}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=_This, Path=ArtistViewType}" Value="{x:Static enums:ArtistViewType.AlbumTile}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ArtistTile}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=_This, Path=ArtistViewType}" Value="{x:Static enums:ArtistViewType.Plain}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ArtistPlain}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{DynamicResource PrimaryBackground}">
        <ListView x:Name="ListArtists" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  PresentationTraceSources.TraceLevel="High"
                  ItemsSource="{Binding Artists, UpdateSourceTrigger=PropertyChanged}"
                  SelectionChanged="ListArtists_SelectionChanged"
                  BorderThickness="0"
                  Background="{DynamicResource FirstItemBackground}"
                  SizeChanged="ListArtists_SizeChanged"
                  PreviewMouseUp="ListArtists_PreviewMouseUp"
                  PreviewKeyDown="ListArtists_PreviewKeyDown"
                  PreviewMouseDown="ListArtists_PreviewMouseDown"
                  PreviewMouseMove="ListArtists_PreviewMouseMove"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  ItemTemplate="{StaticResource SwitchArtistTemplate}"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  SelectionMode="Extended"
                  >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ListViewItemForeground}"/>
                    <Setter Property="MaxWidth" Value="{Binding ElementName=_This, Path=ListWidth}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="ContentTemplate" Value="{StaticResource ItemList}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="Margin" Value="0,0,0,1"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{DynamicResource FirstItemBackground}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="{DynamicResource GridAlternateBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel  Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, Path=ActualHeight}"
									Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

        </ListView>
    </Grid>
</UserControl>
